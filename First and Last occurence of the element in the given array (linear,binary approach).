// First and Last occurence of the element in the given array (linear,binary approach).

1> Linear Approach

#include<iostream>
#include<vector>
using namespace std;

int main(){
    int n,k;
    cout<<"Enter size of the element: ";
    cin>>n;
    cout<<"Enter number to be searched: ";
    cin>>k;
    vector<int> v1(n);
    for(int i=0; i<n; i++){
        cin>>v1[i];
    }
    
    for(int i=0; i<n; i++){
        if(v1[i]==k){
            cout<<i<<" ";
            break;
        }
    }
    for(int i=n-1; i>0; i--){
        if(v1[i]==k){
            cout<<i<<" ";
            break;
        }
    }
    return 0;
}


2> Binary Approach

#include<iostream>
#include<vector>
using namespace std;

void firstOccurence(vector<int>&v1,int n,int k){
    int start=0;
    int end=n-1;
    int ans=-1;
    while(start<=end){
        int mid=start+(end-start)/2;
        if(v1[mid]==k){
            ans=mid;
            end=mid-1;
        }
        else if(v1[mid]>k){
            end=mid-1;
        }
        else if(v1[mid]<k){
            start=mid+1;
        }
    }
    cout<<"First Occurence of the element is: "<<ans<<endl;
}

void lastOccurence(vector<int>&v1,int n,int k){
    int start=0;
    int end=n-1;
    int ans=-1;
    while(start<=end){
        int mid=start+(end-start)/2;
        if(v1[mid]==k){
            ans=mid;
            start=mid+1;
        }
        else if(v1[mid]>k){
            end=mid-1;
        }
        else if(v1[mid]<k){
            start=mid+1;
        }
    }
    cout<<"Last Occurence of the element is: "<<ans<<endl;
}

int main(){
    int n,k;
    cout<<"Enter size of the element: ";
    cin>>n;
    cout<<"Enter number to be searched: ";
    cin>>k;
    vector<int> v1(n);
    for(int i=0; i<n; i++){
        cin>>v1[i];
    }
    
    firstOccurence(v1,n,k);
    lastOccurence(v1,n,k);
    
    
    return 0;
}
